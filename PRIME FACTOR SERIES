// Sample code to perform prime factorization:
#include<iostream>
#include<vector>
#include<string>
using namespace std;
//using namespace std::vector;
int spf[1000005];
//int n=100;
//vector<pair<int,int>> prime;
void seive()
{
//int spf[0]=spf[1]=1;
for(int i=2;i<=1000000;i++)
    {
       if(spf[i]==0)
        {
            for(int j=i;j<=1000000;j+=i)
            {
                spf[j]=i;
            }
        }
    }
}

int main()
{
seive();
int q;
cin>>q;

while(q--)
{
    int num;
    cin>>num;
    vector <pair<int,int>> prime;
    while(num>1)
    {
        //int spf[num],sp;
        int c=0;
        int sp=spf[num];
        while(num%sp==0)
        {
            c+=1;
            num/=sp;
        }
        prime.push_back({sp,c});
        //cout<<prime.size()<<endl;
    }
    string s1,s2,res;
    for(int i=prime.size()-1;i>=0;i--)
    {
        int b,p;
        b=prime[i].first;
        p=prime[i].second;
        s1=to_string(b);
        s2=to_string(p);
        res=(s1+"^"+s2)+"*"+res;  
        //cout<<prime[i].first<<"^"<<prime[i].second;
    }
    
        //s1=(string)prime[i].first+"^"+(string)prime[i].second;
        
    cout<<res<<"2^0"<<endl;
    
}
return 0;
}
